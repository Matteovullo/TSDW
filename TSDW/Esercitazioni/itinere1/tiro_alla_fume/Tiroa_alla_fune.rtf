{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     Scrivere un programma in C che simuli un incontro di \'93tiro alla fune\'94 tra due 2 thread \'93giocatori\'94 tp[0], tp[1].\
\
    E\'92 data una variabile globale intera posizione (con valore iniziale 0) condivisa da tutti i thread. \
    Sono date inoltre due variabili globali intere, vittorie_tp0 e vittorie_tp1.\
\
    Ogni thread giocatore esegue un ciclo in cui:\
    - genera un intero casuale recupero compreso tra 0 e 3\
    - genera un intero casuale forza compreso tra 0 e 5\
    - attende recupero secondi \
\
    - se tp[0]:\
        - se posizione >= 10 riconosce la vittoria di tp[1] e: \
            - incrementa vittorie_tp1\
            - setta posizione = 0\
            - sveglia tp[1]\
        -altrimenti: \
            - decrementa posizione di forza\
            - se posizione <= -10 ha vinto, e si mette in attesa di tp[1]\
            \
    - se tp[1]:\
        - se posizione <= -10 riconosce la vittoria di tp[0] e: \
            - incrementa vittorie_tp0\
            - setta posizione = 0\
            - sveglia tp[0]\
        - altrimenti:\
            - incrementa posizione di forza\
            - se posizione >= 10 ha vinto, e si mette in attesa di tp[0]\
\
    (Opzionale) quando uno dei giocatori ha raggiunto 10 vittorie interrompere il gioco, \
    entrambi i giocatori tp[0], tp[1] devono aver terminato la loro esecuzione, \
    e la funzione main() se ne deve accorgere scrivendo \
    sullo standard output il giocatore che ha totalizzato pi\'f9 vittorie.\
}